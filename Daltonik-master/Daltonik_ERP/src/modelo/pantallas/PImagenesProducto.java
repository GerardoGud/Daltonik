/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modelo.pantallas;

import daltonik_erp.PanelIMG;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.sql.rowset.serial.SerialBlob;
import modelo.datos.ImagenesProductoDAO;
import modelo.beans.ImagenesProducto;
import modelo.utilidades.Archivos;


/**
 *
 * @author Luis Cervantes
 */
public class PImagenesProducto extends javax.swing.JPanel {
    private ImagenesProductoDAO idao;
    private ImagenesProducto ip;
    private boolean edit;
    private String user; 
    private String pwd;
    private int pagina=0;
    private int idImg=0;
    private int noPaginas=0;
    private ImageIcon img;
    private String rutaIMG;
    private PanelIMG pIMG;
    private byte[] bIMG;
    private File fIMG;
    public PImagenesProducto(String user, String pwd) {
        initComponents();
        this.user = user;
        this.pwd = pwd;
        img=null;
        idao=new ImagenesProductoDAO(user, pwd);
        ip=new ImagenesProducto();
        edit=false;
        cargar();
        paginar();
        cOpciones.removeAllItems();
        cOpciones.addItem("idImagen");
        cOpciones.addItem("idProducto");
        this.tBusqueda.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char caracter = e.getKeyChar();
                if (((caracter < '0')
                        || (caracter > '9'))
                        && (caracter != KeyEvent.VK_BACK_SPACE)) {
                    e.consume();
                }
            }
        });
        this.tIdProducto.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char caracter = e.getKeyChar();
                if (((caracter < '0')
                        || (caracter > '9'))
                        && (caracter != KeyEvent.VK_BACK_SPACE)) {
                    e.consume();
                }
            }
        });
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tIdProducto = new javax.swing.JTextField();
        tMensajes = new javax.swing.JLabel();
        tNombre = new javax.swing.JTextField();
        chkEstatus = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tDatos = new javax.swing.JTable();
        bGuardar = new javax.swing.JButton();
        bBuscar = new javax.swing.JButton();
        bEditar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        bAtras = new javax.swing.JButton();
        tNumPage = new javax.swing.JLabel();
        bSiguiente = new javax.swing.JButton();
        bRecargar = new javax.swing.JButton();
        chkPrincipal = new javax.swing.JCheckBox();
        cOpciones = new javax.swing.JComboBox<>();
        tBusqueda = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        pImagen = new javax.swing.JPanel();

        tMensajes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        tNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNombreActionPerformed(evt);
            }
        });
        tNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tNombreKeyTyped(evt);
            }
        });

        chkEstatus.setText("Activar");
        chkEstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEstatusActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Producto");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Nombre:");

        tDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "idImagen", "Nombre", "Imagen", "Principal", "idProducto", "Estatus"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tDatos);
        if (tDatos.getColumnModel().getColumnCount() > 0) {
            tDatos.getColumnModel().getColumn(0).setResizable(false);
            tDatos.getColumnModel().getColumn(1).setResizable(false);
            tDatos.getColumnModel().getColumn(2).setResizable(false);
            tDatos.getColumnModel().getColumn(3).setResizable(false);
            tDatos.getColumnModel().getColumn(4).setResizable(false);
            tDatos.getColumnModel().getColumn(5).setResizable(false);
        }

        bGuardar.setText("Guardar");
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        bEditar.setText("Editar");
        bEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        jLabel6.setText("Principal");

        bAtras.setText("Atras");
        bAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtrasActionPerformed(evt);
            }
        });

        tNumPage.setText("0");

        bSiguiente.setText("Siguiente");
        bSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiguienteActionPerformed(evt);
            }
        });

        bRecargar.setText("Recargar");
        bRecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRecargarActionPerformed(evt);
            }
        });

        chkPrincipal.setToolTipText("Hacer la imagen principal del producto");
        chkPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPrincipalActionPerformed(evt);
            }
        });

        cOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Cargar imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        pImagen.setBackground(new java.awt.Color(0, 153, 153));
        pImagen.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                pImagenComponentResized(evt);
            }
        });

        javax.swing.GroupLayout pImagenLayout = new javax.swing.GroupLayout(pImagen);
        pImagen.setLayout(pImagenLayout);
        pImagenLayout.setHorizontalGroup(
            pImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pImagenLayout.setVerticalGroup(
            pImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNumPage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSiguiente)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkEstatus)
                                    .addComponent(chkPrincipal)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tNombre)
                                    .addComponent(tIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(bGuardar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(84, 84, 84)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bRecargar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(bBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(chkPrincipal))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkEstatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bGuardar))
                            .addComponent(jButton1))
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEliminar)
                    .addComponent(bEditar)
                    .addComponent(cOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bRecargar)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tNumPage)
                    .addComponent(bSiguiente)
                    .addComponent(bAtras))
                .addGap(84, 84, 84)
                .addComponent(tMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chkEstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkEstatusActionPerformed

    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        boolean bnd = true;
        if (this.tIdProducto.getText().length() == 0 || this.tNombre.getText().length() == 0||
                !idao.buscarProducto(Integer.parseInt(this.tIdProducto.getText())).equals("")) {
            bnd = false;
        }
        System.out.println(bnd);
        if (bnd) {
            ip = new ImagenesProducto();
            ip.setIdImagen(idao.UltimoIDImagenesProducto());
            ip.setNombreImagen(this.tNombre.getText());
            ip.setImagen(bIMG);
            bIMG=null;
            if (this.chkPrincipal.isSelected()) {
                ip.setPrincipal("P");
            } else {
                ip.setPrincipal("S");
            }
            ip.setIdProducto(Integer.parseInt(this.tIdProducto.getText()));
            if (this.chkEstatus.isSelected()) {
                ip.setEstatus("A");
            } else {
                ip.setEstatus("I");
            }
            idao.guardarImagenesProducto(ip);
            noPaginas = idao.cantPaginas();
            cargar();
            paginar();
            limpiar();
        } else {
            if(fIMG==null){
                JOptionPane.showMessageDialog(this, "No se ha elegido una imagen", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "No se encontro el id de producto", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_bGuardarActionPerformed

    private void tNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNombreActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        // TODO add your handling code here:
        String b=this.tBusqueda.getText();
        b= b.replace(" ", "");
        try{
            Integer.parseInt(this.tBusqueda.getText());
            if (this.cOpciones.getSelectedItem().equals("idImagen")) {
                this.tDatos.setModel(idao.cargarId(tDatos, Integer.parseInt(this.tBusqueda.getText())));
                try {
                    int x = Integer.parseInt(this.tBusqueda.getText());
                    try {
                    bIMG = idao.cargarImagen(x);
                    ByteArrayInputStream bis = new ByteArrayInputStream(bIMG);
                    BufferedImage bImage = ImageIO.read(bis);
                    img = new ImageIcon(bImage);
                    pIMG = new daltonik_erp.PanelIMG(img);
                    pIMG.setBounds(0, 0, this.pImagen.getWidth(), pImagen.getHeight());
                    this.pImagen.removeAll();
                    this.pImagen.add(pIMG);
                    this.pImagen.repaint();
                    pIMG.setBounds(0, 0, this.pImagen.getWidth(), pImagen.getHeight());
                    this.repaint();
                } catch (NullPointerException ex) {
                    this.tMensajes.setText("No se cargo ninguna imagen, ya que no se tiene una ");
                } catch (IOException ex) {
                    Logger.getLogger(PImagenesProducto.class.getName()).log(Level.SEVERE, null, ex);
                }
                } catch (NullPointerException ex) {
                    this.tMensajes.setText("No se encontro la imagen");
                    System.out.println(ex.getMessage());
                }
            } else {
                this.tDatos.setModel(idao.cargarIdProducto(tDatos, Integer.parseInt(this.tBusqueda.getText())));
            }
        }catch(NumberFormatException e){
            
        }
        limpiar();
        this.repaint();
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditarActionPerformed
        this.bRecargar.setVisible(false);
        if (edit) {
            edit = false;
            ip = new ImagenesProducto();
            ip.setIdImagen(idao.UltimoIDImagenesProducto());
            ip.setNombreImagen(this.tNombre.getText());
            ip.setImagen(bIMG);
            if (this.chkPrincipal.isSelected()) {
                ip.setPrincipal("P");
            } else {
                ip.setPrincipal("S");
            }
            ip.setIdProducto(Integer.parseInt(this.tIdProducto.getText()));
            if (this.chkEstatus.isSelected()) {
                ip.setEstatus("A");
            } else {
                ip.setEstatus("I");
            }
            idao.editarImagenesProducto(ip,idImg);
            cargar();
            limpiar();
        } else {
            String b = this.tBusqueda.getText();
            b = b.replace(" ", "");
            if (!this.tBusqueda.equals("")) {
                edit = true;
                this.tDatos.setModel(idao.cargarId(tDatos, Integer.parseInt(this.tBusqueda.getText())));
                ip = idao.buscarIdEdicion(Integer.parseInt(this.tBusqueda.getText()));
                idImg=ip.getIdImagen();
                try {
                    bIMG = ip.getImagen();
                    ByteArrayInputStream bis = new ByteArrayInputStream(bIMG);
                    BufferedImage bImage = ImageIO.read(bis);
                    img = new ImageIcon(bImage);
                    pIMG = new daltonik_erp.PanelIMG(img);
                    pIMG.setBounds(0, 0, this.pImagen.getWidth(), pImagen.getHeight());
                    this.pImagen.removeAll();
                    this.pImagen.add(pIMG);
                    this.pImagen.repaint();
                    this.repaint();
                } catch (NullPointerException ex) {
                    this.tMensajes.setText("No se cargo ninguna imagen, ya que no se tiene una ");
                } catch (IOException ex) {
                    Logger.getLogger(PImagenesProducto.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.tIdProducto.setText(ip.getIdProducto() + "");
                this.tNombre.setText(ip.getNombreImagen());
                if (ip.getPrincipal().equals("P")) {
                    this.chkEstatus.setSelected(true);
                } else {
                    this.chkEstatus.setSelected(false);
                }
                if (ip.getEstatus().equals("A")) {
                    this.chkEstatus.setSelected(true);
                } else {
                    this.chkEstatus.setSelected(false);
                }
            }
        }
        this.bBuscar.setVisible(!edit);
        this.bEliminar.setVisible(!edit);
        this.bGuardar.setVisible(!edit);
        this.bRecargar.setVisible(!edit);
    }//GEN-LAST:event_bEditarActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
       idao.eliminarImagenesProducto(Integer.parseInt(this.tBusqueda.getText()));
       this.tDatos.setModel(idao.cargarTabla(tDatos, pagina));
       noPaginas=idao.cantPaginas();
        paginar();
        limpiar();
    }//GEN-LAST:event_bEliminarActionPerformed

    private void tNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tNombreKeyTyped
//        char validar = evt.getKeyChar();
//        if(Character.isLetter(validar)){
//            getToolkit().beep();
//            evt.consume();
//            JOptionPane.showMessageDialog(tNombre, "Caracter no valido");
//        }
    }//GEN-LAST:event_tNombreKeyTyped

    private void bAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtrasActionPerformed
        // TODO add your handling code here:
        if(pagina>0)pagina--;
        paginar();
        cargar();
    }//GEN-LAST:event_bAtrasActionPerformed

    private void bSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiguienteActionPerformed
        // TODO add your handling code here:
        if(pagina<noPaginas)pagina++;
        paginar();
        cargar();
    }//GEN-LAST:event_bSiguienteActionPerformed

    private void chkPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPrincipalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPrincipalActionPerformed

    private void bRecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRecargarActionPerformed
        paginar();
        cargar();
    }//GEN-LAST:event_bRecargarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Archivos arc= new Archivos("jpg");
        rutaIMG=arc.AbrirArchivo();
        rutaIMG=rutaIMG.replace((char)92,(char) 47);
        if(rutaIMG.equals("Operacion cancelada")){
            this.tMensajes.setText("No se eligio una imagen");
        }else{
            try {
                fIMG = new File(rutaIMG);
                Image imagen = new ImageIcon(rutaIMG).getImage();
                img = new ImageIcon(imagen);
                pIMG= new daltonik_erp.PanelIMG(img);
                pIMG.setBounds(0,0, this.pImagen.getWidth(),pImagen.getHeight());
                bIMG=null;
                byte[] b= new byte[(int) fIMG.length()];
                bIMG=b;
                InputStream input = null;
                input = new FileInputStream(fIMG);
                input.read(bIMG);
                input.close();
                this.pImagen.removeAll();
                this.pImagen.add(pIMG);
                this.pImagen.repaint();
                this.repaint();
                this.tMensajes.setText("Imagen elegida");
            } catch (FileNotFoundException ex) {
               this.tMensajes.setText("No se encontro la imagen XC");
            } catch (IOException ex) {
                this.tMensajes.setText("No se que paso krnal");
            }
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pImagenComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pImagenComponentResized
        // TODO add your handling code here:
        if(pIMG!=null){
            pIMG.setBounds(0,0, this.pImagen.getWidth(),pImagen.getHeight());
                this.pImagen.removeAll();
                this.pImagen.add(pIMG);
                this.pImagen.repaint();
        }
    }//GEN-LAST:event_pImagenComponentResized
    public void cargar() {
        this.tDatos.setModel(idao.cargarTabla(tDatos, pagina));
    }
    public void limpiar(){
        this.tNombre.setText("");
        this.tIdProducto.setText("");
        this.tBusqueda.setText("");
        this.pImagen.removeAll();
    }
    public void paginar(){
        if(pagina==0){
            this.bAtras.setVisible(false);
        }else{
            this.bAtras.setVisible(true);
        }
        if(pagina<noPaginas){
            this.bSiguiente.setVisible(true);
        }else{
            this.bSiguiente.setVisible(false);
        }
        this.tNumPage.setText((pagina+1)+" de "+(noPaginas+1));
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtras;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEditar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bGuardar;
    private javax.swing.JButton bRecargar;
    private javax.swing.JButton bSiguiente;
    private javax.swing.JComboBox<String> cOpciones;
    private javax.swing.JCheckBox chkEstatus;
    private javax.swing.JCheckBox chkPrincipal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pImagen;
    private javax.swing.JTextField tBusqueda;
    private javax.swing.JTable tDatos;
    private javax.swing.JTextField tIdProducto;
    private javax.swing.JLabel tMensajes;
    private javax.swing.JTextField tNombre;
    private javax.swing.JLabel tNumPage;
    // End of variables declaration//GEN-END:variables
}
